############################################################################################################################################
# Workspace
############################################################################################################################################

GET           /                                                                 controllers.workspace.WorkspaceController.index
GET           /tree                                                             controllers.workspace.WorkspaceController.tree
GET           /allActivities                                                    controllers.workspace.WorkspaceController.activities

GET           /dialogs/newproject                                               controllers.workspace.WorkspaceController.newProjectDialog()
GET           /dialogs/importproject                                            controllers.workspace.WorkspaceController.importProjectDialog()
GET           /dialogs/removeproject/:project                                   controllers.workspace.WorkspaceController.removeProjectDialog(project: String)
GET           /dialogs/removetask/:project/:task                                controllers.workspace.WorkspaceController.removeTaskDialog(project: String, task: String)
GET           /dialogs/removeresource/:name                                     controllers.workspace.WorkspaceController.removeResourceDialog(name: String, path: String)
GET           /dialogs/importlinkspec/:project                                  controllers.workspace.WorkspaceController.importLinkSpecDialog(project: String)
GET           /dialogs/prefixes/:project                                        controllers.workspace.WorkspaceController.prefixDialog(project: String)
GET           /dialogs/resources/:project                                       controllers.workspace.WorkspaceController.resourcesDialog(project: String)
GET           /dialogs/executeProject/:project                                  controllers.workspace.WorkspaceController.executeProjectDialog(project: String)
GET           /dialogs/cloneProject                                             controllers.workspace.WorkspaceController.cloneProjectDialog(project)
GET           /dialogs/cloneTask                                                controllers.workspace.WorkspaceController.cloneTaskDialog(project, task)
GET           /dialogs/activityConfig/:project/:activity                        controllers.workspace.WorkspaceController.projectActivityConfigDialog(project: String, activity: String)
GET           /dialogs/activityConfig/:project/:task/:activity                  controllers.workspace.WorkspaceController.taskActivityConfigDialog(project: String, task: String, activity: String)
POST          /:project/importExample                                           controllers.workspace.WorkspaceController.importExample(project: String)

############################################################################################################################################
# Datasets
############################################################################################################################################

# Dialogs
GET           /dialogs/newDataset/:project                                      controllers.workspace.DatasetApi.datasetDialog(project: String, task = "", title = "Create Dataset", createDialog: Boolean = true)
GET           /dialogs/editDataset/:project/:task                               controllers.workspace.DatasetApi.datasetDialog(project: String, task: String, title = "Edit Dataset", createDialog: Boolean = false)
GET           /dialogs/editDatasetAutoConfigured/:project/:task/:pluginId       controllers.workspace.DatasetApi.datasetDialogAutoConfigured(project, task, pluginId)

# Tabs
GET           /datasets/:project/:task/dataset                                  controllers.workspace.DatasetApi.dataset(project, task)
GET           /datasets/:project/:task/table                                    controllers.workspace.DatasetApi.table(project, task, maxEntities: Int ?= 20)
GET           /datasets/:project/:task/sparql                                   controllers.workspace.DatasetApi.sparql(project, task, query ?= "")
GET           /datasets/:project/:task/types                                    controllers.workspace.DatasetApi.types(project, task, search)

############################################################################################################################################
# CustomTasks
############################################################################################################################################

# Dialogs
GET           /customTasks/newTaskDialog/:project                                controllers.workspace.CustomTasks.taskDialog(project: String, task = "", createDialog: Boolean = true)
GET           /customTasks/editTaskDialog/:project/:task                         controllers.workspace.CustomTasks.taskDialog(project: String, task: String, createDialog: Boolean = false)

############################################################################################################################################
# Workspace API - DEPRECATED routes -> perm redirected to new API routes
############################################################################################################################################

# Reload Workspace
POST          /reload                                                           controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest = "")
POST          /reloadPrefixes                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest = "")
POST          /import/:importPlugin                                             controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", importPlugin: String)
GET           /export/:exportPlugin                                             controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", exportPlugin: String)
GET           /marshallingPlugins                                               controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest = "")

# Projects
# Project related API endpoints have been moved to projectsApi.routes
GET           /projects                                                         controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest = "")
POST          /projects/*rest                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)
PUT           /projects/*rest                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)
PATCH         /projects/*rest                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)
GET           /projects/*rest                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)
DELETE        /projects/*rest                                                   controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)

# General Activities API
POST          /activities/*rest                                                 controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)
GET           /activities/*rest                                                 controllers.workspace.HttpUtilApi.permPrefixRedirect(prefix =  "/api", rest: String)

############################################################################################################################################
# Assets
############################################################################################################################################

GET           /assets/*file                                                     controllers.workspace.Assets.at(path="/public/lib/silk-workbench-workspace", file)

############################################################################################################################################
# SPARQL 1.1 Protocol
############################################################################################################################################

GET           /rdfdataset/:project/:task/sparql                                 controllers.sparqlapi.SparqlProtocolApi.select(project, task, query ?= "", defaultGraphUri: List[String] ?= List[String](), namedGraphUri: List[String] ?= List[String]())
POST          /rdfdataset/:project/:task/sparql                                 controllers.sparqlapi.SparqlProtocolApi.postSelect(project, task, defaultGraphUri: List[String] ?= List[String](), namedGraphUri: List[String] ?= List[String]())
